#!/bin/bash

set -euo pipefail

VAR_PATH_DIRECTORY_POSTGRESQL_DATA_ORIGINAL="${1}"
VAR_PATH_DIRECTORY_POSTGRESQL_DATA="${2}"

ls -Al "${VAR_PATH_DIRECTORY_POSTGRESQL_DATA_ORIGINAL}"

mkdir -p "${VAR_PATH_DIRECTORY_POSTGRESQL_DATA}"
cp -Rp "${VAR_PATH_DIRECTORY_POSTGRESQL_DATA_ORIGINAL}/." "${VAR_PATH_DIRECTORY_POSTGRESQL_DATA}"
rm -rf "${VAR_PATH_DIRECTORY_POSTGRESQL_DATA_ORIGINAL}"

ls -Al "${VAR_PATH_DIRECTORY_POSTGRESQL_DATA}"

VAR_PATH_FILE_POSTGRESQL_CONF="/etc/postgresql/${VERSION_POSTGRESQL}/main/postgresql.conf"
VAR_PATH_FILE_POSTGRESQL_CONF_TEMP="/tmp/postgresql.conf.tmp"

VAR_NUMBER_LINE_DATA_DIRECTORY=$(cat ${VAR_PATH_FILE_POSTGRESQL_CONF} \
                               | grep -n "data_directory = "          \
                               | sed 's/:.*//')
VAR_STRING_NEW_DATA_DIRECTORY="data_directory = '${VAR_PATH_DIRECTORY_POSTGRESQL_DATA}'"

touch "${VAR_PATH_FILE_POSTGRESQL_CONF_TEMP}"

VAR_COUNTER=0
while IFS='' read -r VAR_LINE || [[ -n "${VAR_LINE}" ]]; do
  VAR_COUNTER=$((VAR_COUNTER + 1))
  if [ "${VAR_COUNTER}" = "${VAR_NUMBER_LINE_DATA_DIRECTORY}" ]; then
    echo "${VAR_STRING_NEW_DATA_DIRECTORY}" >> "${VAR_PATH_FILE_POSTGRESQL_CONF_TEMP}"
  else
    echo "${VAR_LINE}"                      >> "${VAR_PATH_FILE_POSTGRESQL_CONF_TEMP}"
  fi
done < "${VAR_PATH_FILE_POSTGRESQL_CONF}"

cp -f "${VAR_PATH_FILE_POSTGRESQL_CONF_TEMP}" "${VAR_PATH_FILE_POSTGRESQL_CONF}"
